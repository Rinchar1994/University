begin:
jal receive
addi $0, $0, 0
addi $2, $0, 0
beq $2, $4, uart
addi $2, $0, 1
beq $2, $4, inputcode
addi $2, $0, 2
beq $2, $4, outputcode
addi $2, $0, 3
beq $2, $4, regcontent 
addi $2, $0, 4
beq $2, $4, ramcontent
addi $2, $0, 5
beq $2, $4, imple_all
addi $2, $0, 6
beq $2, $4, breakpoint
addi $2, $0, 7
beq $2, $4, unbreak
addi $2, $0, 8
beq $2, $4, go_on
addi $2, $0, 9
beq $2, $4, single

breakpoint:
jal receiveword
addi $0, $0, 0
sll $4, $4, 2
addi $9, $4, 2048
lw $8, 0($9)
addi $10, $0, 0x08
sll $10, $10, 24
sw $10, 0($9)
j begin

unbreak:
sw $8, 0($9)
addi $8, $0, 0
addi $9, $0, 0
j begin

go_on:
sw $8, 0($9)
addi $31, $9, 0
addi $9, $0, 0
addi $8, $0, 0
jr $31

imple_all:
addi $31, $0, 2048
jr $31

single:
bne $8, $0, break 
addi $9, $0, 2048
j init
break:
sw $8, 0($9)
init:
lw $8, 4($9)
addi $10, $0 ,0x08
sll $10, $10, 24
sw $10, 4($9)
addi $31, $9, 0
addi $9, $9, 4
jr $31

ramcontent:
jal receiveword
addi $0, $0, 0
lw $1, 0($4)
addi $4, $1, 0
jal sendword
addi $0, $0, 0
j begin

regcontent:
jal receive
addi $0, $0, 0
reg0:
addi $3, $0, 0x0
bne $3, $4, reg1
addi $4, $0, 0
j regout
reg1:
addi $3, $0, 0x1
bne $3, $4, reg2
addi $4, $1, 0
j regout
reg2:
addi $3, $0, 0x2
bne $3, $4, reg3
addi $4, $2, 0
j regout
reg3:
addi $3, $0, 0x3
bne $3, $4, reg4
addi $4, $3, 0
j regout
reg4:
addi $3, $0, 0x4
bne $3, $4, reg5
addi $4, $4, 0
j regout
reg5:
addi $3, $0, 0x5
bne $3, $4, reg6
addi $4, $5, 0
j regout
reg6:
addi $3, $0, 0x6
bne $3, $4, reg7
addi $4, $6, 0
j regout
reg7:
addi $3, $0, 0x7
bne $3, $4, reg8
addi $4, $7, 0
j regout
reg8:
addi $3, $0, 0x8
bne $3, $4, reg9
addi $4, $8, 0
j regout
reg9:
addi $3, $0, 0x9
bne $3, $4, reg10
addi $4, $9, 0
j regout
reg10:
addi $3, $0, 0x10
bne $3, $4, reg11
addi $4, $10, 0
j regout
reg11:
addi $3, $0, 0x11
bne $3, $4, reg12
addi $4, $11, 0
j regout
reg12:
addi $3, $0, 0x12
bne $3, $4, reg13
addi $4, $12, 0
j regout
reg13:
addi $3, $0, 0x13
bne $3, $4, reg14
addi $4, $13, 0
j regout
reg14:
addi $3, $0, 0x14
bne $3, $4, reg15
addi $4, $14, 0
j regout
reg15:
addi $3, $0, 0x15
bne $3, $4, reg16
addi $4, $15, 0
j regout
reg16:
addi $3, $0, 0x16
bne $3, $4, reg17
addi $4, $16, 0
j regout
reg17:
addi $3, $0, 0x17
bne $3, $4, reg18
addi $4, $17, 0
j regout
reg18:
addi $3, $0, 0x18
bne $3, $4, reg19
addi $4, $18, 0
j regout
reg19:
addi $3, $0, 0x19
bne $3, $4, reg20
addi $4, $19, 0
j regout
reg20:
addi $3, $0, 0x20
bne $3, $4, reg21
addi $4, $20, 0
j regout
reg21:
addi $3, $0, 0x21
bne $3, $4, reg22
addi $4, $21, 0
j regout
reg22:
addi $3, $0, 0x22
bne $3, $4, reg23
addi $4, $22, 0
j regout
reg23:
addi $3, $0, 0x23
bne $3, $4, reg24
addi $4, $23, 0
j regout
reg24:
addi $3, $0, 0x24
bne $3, $4, reg25
addi $4, $24, 0
j regout
reg25:
addi $3, $0, 0x25
bne $3, $4, reg26
addi $4, $25, 0
j regout
reg26:
addi $3, $0, 0x26
bne $3, $4, reg27
addi $4, $26, 0
j regout
reg27:
addi $3, $0, 0x27
bne $3, $4, reg28
addi $4, $27, 0
j regout
reg28:
addi $3, $0, 0x28
bne $3, $4, reg29
addi $4, $28, 0
j regout
reg29:
addi $3, $0, 0x29
bne $3, $4, reg30
addi $4, $29, 0
j regout
reg30:
addi $3, $0, 0x30
bne $3, $4, reg31
addi $4, $30, 0
j regout
reg31:
addi $3, $0, 0x31
bne $3, $4, begin
addi $4, $31, 0
j regout
regout:
jal sendword
addi $0, $0, 0
j begin

outputcode:
addi $6, $0, 2048
out:
beq $5, $6, begin
lw $4, 0($6)
jal sendword
addi $0, $0, 0
addi $6, $6, 4
j out

inputcode:
addi $5, $0, 2048 
in:
jal receiveword
addi $0, $0, 0
beq $0, $4, begin
sw $4, 1024($0)
sw $4, 0($5)
addi $5, $5, 4
j in

uart:
jal receive
addi $0, $0, 0
jal send
addi $0, $0, 0
j begin

receive:
lw $1, 1036($0)
beq $1, $0, receive
lw $4, 1040($0)
rsleep:
addi $3, $0, 100
addi $7, $0, 0
rsleeploop:
addi $7, $7, 1
bne $7, $3, rsleeploop
jr $31

send:
#data to send
sw $4, 1032($0)
#ena
addi $1, $0, 1
sw $1, 1028($0)
senddown:
lw $1, 1044($0)
beq $1, $0, senddown
ssleep:
addi $3, $0, 100
addi $7, $0, 0
ssleeploop:
addi $7, $7, 1
bne $7, $3, ssleeploop
jr $31

receiveword:
addi $4, $0, 0
re1:
lw $1, 1036($0)
beq $1, $0, re1
lw $1, 1040($0)
add $4, $4, $1
sll $4, $4, 8
rsleep1:
addi $3, $0, 100
addi $7, $0, 0
rsleeploop1:
addi $7, $7, 1
bne $7, $3, rsleeploop1
re2:
lw $1, 1036($0)
beq $1, $0, re2
lw $1, 1040($0)
add $4, $4, $1
sll $4, $4, 8
rsleep2:
addi $3, $0, 100
addi $7, $0, 0
rsleeploop2:
addi $7, $7, 1
bne $7, $3, rsleeploop2
re3:
lw $1, 1036($0)
beq $1, $0, re3
lw $1, 1040($0)
add $4, $4, $1
sll $4, $4, 8
rsleep3:
addi $3, $0, 100
addi $7, $0, 0
rsleeploop3:
addi $7, $7, 1
bne $7, $3, rsleeploop3
re4:
lw $1, 1036($0)
beq $1, $0, re4
lw $1, 1040($0)
add $4, $4, $1
rsleep4:
addi $3, $0, 100
addi $7, $0, 0
rsleeploop4:
addi $7, $7, 1
bne $7, $3, rsleeploop4
jr $31

sendword:
#protect $4
sw $4, 16($0)
srl $4, $4, 24
sw $4, 1032($0)
addi $1, $0, 1
sw $1, 1028($0)
sdown1:
lw $1, 1044($0)
beq $1, $0, sdown1
ssleep1:
addi $3, $0, 100
addi $7, $0, 0
ssleeploop1:
addi $7, $7, 1
bne $7, $3, ssleeploop1
lw $4, 16($0)
srl $4, $4, 16
sw $4, 1032($0)
addi $1, $0, 1
sw $1, 1028($0)
sdown2:
lw $1, 1044($0)
beq $1, $0, sdown2
ssleep2:
addi $3, $0, 100
addi $7, $0, 0
ssleeploop2:
addi $7, $7, 1
bne $7, $3, ssleeploop2
lw $4, 16($0)
srl $4, $4, 8
sw $4, 1032($0)
addi $1, $0, 1
sw $1, 1028($0)
sdown3:
lw $1, 1044($0)
beq $1, $0, sdown3
ssleep3:
addi $3, $0, 100
addi $7, $0, 0
ssleeploop3:
addi $7, $7, 1
bne $7, $3, ssleeploop3
lw $4, 16($0)
sw $4, 1032($0)
addi $1, $0, 1
sw $1, 1028($0)
sdown4:
lw $1, 1044($0)
beq $1, $0, sdown4
ssleep4:
addi $3, $0, 100
addi $7, $0, 0
ssleeploop4:
addi $7, $7, 1
bne $7, $3, ssleeploop4
jr $31

